//
// File generated by /home/jixie/Software/root_v5.28/bin/rootcint at Tue Mar  8 11:41:47 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME S4UtilsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "S4UtilsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TAttDrawable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAttDrawable(void *p = 0);
   static void *newArray_TAttDrawable(Long_t size, void *p);
   static void delete_TAttDrawable(void *p);
   static void deleteArray_TAttDrawable(void *p);
   static void destruct_TAttDrawable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAttDrawable*)
   {
      ::TAttDrawable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAttDrawable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAttDrawable", ::TAttDrawable::Class_Version(), "./TAttDrawable.h", 25,
                  typeid(::TAttDrawable), DefineBehavior(ptr, ptr),
                  &::TAttDrawable::Dictionary, isa_proxy, 4,
                  sizeof(::TAttDrawable) );
      instance.SetNew(&new_TAttDrawable);
      instance.SetNewArray(&newArray_TAttDrawable);
      instance.SetDelete(&delete_TAttDrawable);
      instance.SetDeleteArray(&deleteArray_TAttDrawable);
      instance.SetDestructor(&destruct_TAttDrawable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAttDrawable*)
   {
      return GenerateInitInstanceLocal((::TAttDrawable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAttDrawable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TAttElement_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAttElement(void *p = 0);
   static void *newArray_TAttElement(Long_t size, void *p);
   static void delete_TAttElement(void *p);
   static void deleteArray_TAttElement(void *p);
   static void destruct_TAttElement(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAttElement*)
   {
      ::TAttElement *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAttElement >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAttElement", ::TAttElement::Class_Version(), "./TAttElement.h", 26,
                  typeid(::TAttElement), DefineBehavior(ptr, ptr),
                  &::TAttElement::Dictionary, isa_proxy, 4,
                  sizeof(::TAttElement) );
      instance.SetNew(&new_TAttElement);
      instance.SetNewArray(&newArray_TAttElement);
      instance.SetDelete(&delete_TAttElement);
      instance.SetDeleteArray(&deleteArray_TAttElement);
      instance.SetDestructor(&destruct_TAttElement);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAttElement*)
   {
      return GenerateInitInstanceLocal((::TAttElement*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAttElement*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TAttLockable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TAttLockable(void *p = 0);
   static void *newArray_TAttLockable(Long_t size, void *p);
   static void delete_TAttLockable(void *p);
   static void deleteArray_TAttLockable(void *p);
   static void destruct_TAttLockable(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TAttLockable*)
   {
      ::TAttLockable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TAttLockable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TAttLockable", ::TAttLockable::Class_Version(), "./TAttLockable.h", 25,
                  typeid(::TAttLockable), DefineBehavior(ptr, ptr),
                  &::TAttLockable::Dictionary, isa_proxy, 4,
                  sizeof(::TAttLockable) );
      instance.SetNew(&new_TAttLockable);
      instance.SetNewArray(&newArray_TAttLockable);
      instance.SetDelete(&delete_TAttLockable);
      instance.SetDeleteArray(&deleteArray_TAttLockable);
      instance.SetDestructor(&destruct_TAttLockable);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TAttLockable*)
   {
      return GenerateInitInstanceLocal((::TAttLockable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TAttLockable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TAttDrawable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttDrawable::Class_Name()
{
   return "TAttDrawable";
}

//______________________________________________________________________________
const char *TAttDrawable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttDrawable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttDrawable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttDrawable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttDrawable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttDrawable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttDrawable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttDrawable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttElement::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttElement::Class_Name()
{
   return "TAttElement";
}

//______________________________________________________________________________
const char *TAttElement::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttElement*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttElement::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttElement*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttElement::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttElement*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttElement::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttElement*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TAttLockable::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TAttLockable::Class_Name()
{
   return "TAttLockable";
}

//______________________________________________________________________________
const char *TAttLockable::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttLockable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TAttLockable::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TAttLockable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TAttLockable::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttLockable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TAttLockable::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TAttLockable*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TAttDrawable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttDrawable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAttDrawable::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAttDrawable::Class(),this);
   }
}

//______________________________________________________________________________
void TAttDrawable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAttDrawable.
      TClass *R__cl = ::TAttDrawable::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TAttDrawable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttDrawable : new ::TAttDrawable;
   }
   static void *newArray_TAttDrawable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttDrawable[nElements] : new ::TAttDrawable[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAttDrawable(void *p) {
      delete ((::TAttDrawable*)p);
   }
   static void deleteArray_TAttDrawable(void *p) {
      delete [] ((::TAttDrawable*)p);
   }
   static void destruct_TAttDrawable(void *p) {
      typedef ::TAttDrawable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttDrawable

//______________________________________________________________________________
void TAttElement::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttElement.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAttElement::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAttElement::Class(),this);
   }
}

//______________________________________________________________________________
void TAttElement::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAttElement.
      TClass *R__cl = ::TAttElement::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParentPtr", &fParentPtr);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TAttElement(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttElement : new ::TAttElement;
   }
   static void *newArray_TAttElement(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttElement[nElements] : new ::TAttElement[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAttElement(void *p) {
      delete ((::TAttElement*)p);
   }
   static void deleteArray_TAttElement(void *p) {
      delete [] ((::TAttElement*)p);
   }
   static void destruct_TAttElement(void *p) {
      typedef ::TAttElement current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttElement

//______________________________________________________________________________
void TAttLockable::Streamer(TBuffer &R__b)
{
   // Stream an object of class TAttLockable.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TAttLockable::Class(),this);
   } else {
      R__b.WriteClassBuffer(TAttLockable::Class(),this);
   }
}

//______________________________________________________________________________
void TAttLockable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TAttLockable.
      TClass *R__cl = ::TAttLockable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TAttLockable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttLockable : new ::TAttLockable;
   }
   static void *newArray_TAttLockable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TAttLockable[nElements] : new ::TAttLockable[nElements];
   }
   // Wrapper around operator delete
   static void delete_TAttLockable(void *p) {
      delete ((::TAttLockable*)p);
   }
   static void deleteArray_TAttLockable(void *p) {
      delete [] ((::TAttLockable*)p);
   }
   static void destruct_TAttLockable(void *p) {
      typedef ::TAttLockable current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TAttLockable

/********************************************************
* S4UtilsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableS4UtilsDict();

extern "C" void G__set_cpp_environmentS4UtilsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TAttDrawable.h");
  G__add_compiledheader("TAttElement.h");
  G__add_compiledheader("TAttLockable.h");
  G__cpp_reset_tagtableS4UtilsDict();
}
#include <new>
extern "C" int G__cpp_dllrevS4UtilsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TAttDrawable */
static int G__S4UtilsDict_160_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttDrawable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttDrawable[n];
     } else {
       p = new((void*) gvp) TAttDrawable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttDrawable;
     } else {
       p = new((void*) gvp) TAttDrawable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TAttDrawable*) G__getstructoffset())->Draw((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TAttDrawable*) G__getstructoffset())->Draw();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TAttDrawable*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TAttDrawable*) G__getstructoffset())->Draw((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttDrawable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttDrawable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAttDrawable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttDrawable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAttDrawable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttDrawable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttDrawable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttDrawable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttDrawable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttDrawable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttDrawable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_160_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttDrawable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4UtilsDict_160_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAttDrawable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAttDrawable(*(TAttDrawable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttDrawable G__TTAttDrawable;
static int G__S4UtilsDict_160_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAttDrawable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAttDrawable*) (soff+(sizeof(TAttDrawable)*i)))->~G__TTAttDrawable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAttDrawable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAttDrawable*) (soff))->~G__TTAttDrawable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4UtilsDict_160_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttDrawable* dest = (TAttDrawable*) G__getstructoffset();
   *dest = *(TAttDrawable*) libp->para[0].ref;
   const TAttDrawable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttElement */
static int G__S4UtilsDict_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttElement* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttElement[n];
     } else {
       p = new((void*) gvp) TAttElement[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttElement;
     } else {
       p = new((void*) gvp) TAttElement;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const TAttElement& obj = ((const TAttElement*) G__getstructoffset())->GetParent((Bool_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 0:
      {
         const TAttElement& obj = ((const TAttElement*) G__getstructoffset())->GetParent();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttElement*) G__getstructoffset())->SetParentPtr((TAttElement*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttElement::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttElement::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAttElement::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttElement::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAttElement*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttElement*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttElement*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttElement*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttElement::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttElement::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttElement::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttElement::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4UtilsDict_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAttElement* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAttElement(*(TAttElement*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttElement G__TTAttElement;
static int G__S4UtilsDict_161_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAttElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAttElement*) (soff+(sizeof(TAttElement)*i)))->~G__TTAttElement();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAttElement*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAttElement*) (soff))->~G__TTAttElement();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4UtilsDict_161_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttElement* dest = (TAttElement*) G__getstructoffset();
   *dest = *(TAttElement*) libp->para[0].ref;
   const TAttElement& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TAttLockable */
static int G__S4UtilsDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttLockable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttLockable[n];
     } else {
       p = new((void*) gvp) TAttLockable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TAttLockable;
     } else {
       p = new((void*) gvp) TAttLockable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TAttLockable*) G__getstructoffset())->IsLocked());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttLockable*) G__getstructoffset())->Lock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttLockable*) G__getstructoffset())->Unlock();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TAttLockable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttLockable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TAttLockable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TAttLockable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TAttLockable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttLockable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttLockable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TAttLockable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttLockable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttLockable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TAttLockable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4UtilsDict_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TAttLockable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4UtilsDict_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TAttLockable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TAttLockable(*(TAttLockable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TAttLockable G__TTAttLockable;
static int G__S4UtilsDict_162_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TAttLockable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TAttLockable*) (soff+(sizeof(TAttLockable)*i)))->~G__TTAttLockable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TAttLockable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TAttLockable*) (soff))->~G__TTAttLockable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4UtilsDict_162_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TAttLockable* dest = (TAttLockable*) G__getstructoffset();
   *dest = *(TAttLockable*) libp->para[0].ref;
   const TAttLockable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TAttDrawable */

/* TAttElement */

/* TAttLockable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncS4UtilsDict {
 public:
  G__Sizep2memfuncS4UtilsDict(): p(&G__Sizep2memfuncS4UtilsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncS4UtilsDict::*p)();
};

size_t G__get_sizep2memfuncS4UtilsDict()
{
  G__Sizep2memfuncS4UtilsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceS4UtilsDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableS4UtilsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__S4UtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TAttDrawable */
static void G__setup_memvarTAttDrawable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable));
   { TAttDrawable *p; p=(TAttDrawable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4UtilsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttElement */
static void G__setup_memvarTAttElement(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement));
   { TAttElement *p; p=(TAttElement*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement),-1,-1,4,"fParentPtr=",0,"pointer to parent");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4UtilsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TAttLockable */
static void G__setup_memvarTAttLockable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable));
   { TAttLockable *p; p=(TAttLockable*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStatus=",0,"lock byte");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4UtilsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarS4UtilsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTAttDrawable(void) {
   /* TAttDrawable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable));
   G__memfunc_setup("TAttDrawable",1183,G__S4UtilsDict_160_0_1, 105, G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__S4UtilsDict_160_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Draw",398,G__S4UtilsDict_160_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4UtilsDict_160_0_4, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAttDrawable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4UtilsDict_160_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttDrawable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4UtilsDict_160_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAttDrawable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4UtilsDict_160_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttDrawable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__S4UtilsDict_160_0_8, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__S4UtilsDict_160_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__S4UtilsDict_160_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4UtilsDict_160_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4UtilsDict_160_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttDrawable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4UtilsDict_160_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttDrawable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4UtilsDict_160_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttDrawable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4UtilsDict_160_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttDrawable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAttDrawable", 1183, G__S4UtilsDict_160_0_16, (int) ('i'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable), -1, 0, 1, 1, 1, 0, "u 'TAttDrawable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAttDrawable", 1309, G__S4UtilsDict_160_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4UtilsDict_160_0_18, (int) ('u'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttDrawable), -1, 1, 1, 1, 1, 0, "u 'TAttDrawable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttElement(void) {
   /* TAttElement */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement));
   G__memfunc_setup("TAttElement",1095,G__S4UtilsDict_161_0_1, 105, G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__S4UtilsDict_161_0_2, 117, G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement), -1, 1, 1, 1, 1, 9, "g - 'Bool_t' 0 'kTRUE' recursive", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParentPtr",1228,G__S4UtilsDict_161_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TAttElement' - 0 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4UtilsDict_161_0_4, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAttElement::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4UtilsDict_161_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttElement::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4UtilsDict_161_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAttElement::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4UtilsDict_161_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttElement::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__S4UtilsDict_161_0_8, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__S4UtilsDict_161_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__S4UtilsDict_161_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4UtilsDict_161_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4UtilsDict_161_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttElement::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4UtilsDict_161_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttElement::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4UtilsDict_161_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttElement::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4UtilsDict_161_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttElement::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAttElement", 1095, G__S4UtilsDict_161_0_16, (int) ('i'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement), -1, 0, 1, 1, 1, 0, "u 'TAttElement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAttElement", 1221, G__S4UtilsDict_161_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4UtilsDict_161_0_18, (int) ('u'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttElement), -1, 1, 1, 1, 1, 0, "u 'TAttElement' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTAttLockable(void) {
   /* TAttLockable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable));
   G__memfunc_setup("TAttLockable",1178,G__S4UtilsDict_162_0_1, 105, G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLocked",782,G__S4UtilsDict_162_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Lock",393,G__S4UtilsDict_162_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Unlock",620,G__S4UtilsDict_162_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4UtilsDict_162_0_5, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TAttLockable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4UtilsDict_162_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttLockable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4UtilsDict_162_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TAttLockable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4UtilsDict_162_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TAttLockable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__S4UtilsDict_162_0_9, 85, G__get_linked_tagnum(&G__S4UtilsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__S4UtilsDict_162_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__S4UtilsDict_162_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4UtilsDict_162_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4UtilsDict_162_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttLockable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4UtilsDict_162_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttLockable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4UtilsDict_162_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TAttLockable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4UtilsDict_162_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TAttLockable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TAttLockable", 1178, G__S4UtilsDict_162_0_17, (int) ('i'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable), -1, 0, 1, 1, 1, 0, "u 'TAttLockable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TAttLockable", 1304, G__S4UtilsDict_162_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4UtilsDict_162_0_19, (int) ('u'), G__get_linked_tagnum(&G__S4UtilsDictLN_TAttLockable), -1, 1, 1, 1, 1, 0, "u 'TAttLockable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncS4UtilsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalS4UtilsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcS4UtilsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__S4UtilsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_TAttDrawable = { "TAttDrawable" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_TAttElement = { "TAttElement" , 99 , -1 };
G__linked_taginfo G__S4UtilsDictLN_TAttLockable = { "TAttLockable" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableS4UtilsDict() {
  G__S4UtilsDictLN_TClass.tagnum = -1 ;
  G__S4UtilsDictLN_TBuffer.tagnum = -1 ;
  G__S4UtilsDictLN_TMemberInspector.tagnum = -1 ;
  G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__S4UtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__S4UtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__S4UtilsDictLN_TAttDrawable.tagnum = -1 ;
  G__S4UtilsDictLN_TAttElement.tagnum = -1 ;
  G__S4UtilsDictLN_TAttLockable.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableS4UtilsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TAttDrawable),sizeof(TAttDrawable),-1,263424,"Base class for drawable objects",G__setup_memvarTAttDrawable,G__setup_memfuncTAttDrawable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TAttElement),sizeof(TAttElement),-1,263424,"Base class for lockable objects",G__setup_memvarTAttElement,G__setup_memfuncTAttElement);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4UtilsDictLN_TAttLockable),sizeof(TAttLockable),-1,263424,"Base class for lockable objects",G__setup_memvarTAttLockable,G__setup_memfuncTAttLockable);
}
extern "C" void G__cpp_setupS4UtilsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupS4UtilsDict()");
  G__set_cpp_environmentS4UtilsDict();
  G__cpp_setup_tagtableS4UtilsDict();

  G__cpp_setup_inheritanceS4UtilsDict();

  G__cpp_setup_typetableS4UtilsDict();

  G__cpp_setup_memvarS4UtilsDict();

  G__cpp_setup_memfuncS4UtilsDict();
  G__cpp_setup_globalS4UtilsDict();
  G__cpp_setup_funcS4UtilsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncS4UtilsDict();
  return;
}
class G__cpp_setup_initS4UtilsDict {
  public:
    G__cpp_setup_initS4UtilsDict() { G__add_setup_func("S4UtilsDict",(G__incsetup)(&G__cpp_setupS4UtilsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initS4UtilsDict() { G__remove_setup_func("S4UtilsDict"); }
};
G__cpp_setup_initS4UtilsDict G__cpp_setup_initializerS4UtilsDict;

