//
// File generated by /home/jixie/Software/root_v5.28/bin/rootcint at Tue Mar  8 11:41:16 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME S4GoemDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "S4GoemDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TVCurve_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TVCurve(void *p = 0);
   static void *newArray_TVCurve(Long_t size, void *p);
   static void delete_TVCurve(void *p);
   static void deleteArray_TVCurve(void *p);
   static void destruct_TVCurve(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVCurve*)
   {
      ::TVCurve *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVCurve >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVCurve", ::TVCurve::Class_Version(), "./TVCurve.h", 25,
                  typeid(::TVCurve), DefineBehavior(ptr, ptr),
                  &::TVCurve::Dictionary, isa_proxy, 4,
                  sizeof(::TVCurve) );
      instance.SetNew(&new_TVCurve);
      instance.SetNewArray(&newArray_TVCurve);
      instance.SetDelete(&delete_TVCurve);
      instance.SetDeleteArray(&deleteArray_TVCurve);
      instance.SetDestructor(&destruct_TVCurve);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVCurve*)
   {
      return GenerateInitInstanceLocal((::TVCurve*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVCurve*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCircle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCircle(void *p = 0);
   static void *newArray_TCircle(Long_t size, void *p);
   static void delete_TCircle(void *p);
   static void deleteArray_TCircle(void *p);
   static void destruct_TCircle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCircle*)
   {
      ::TCircle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCircle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCircle", ::TCircle::Class_Version(), "./TCircle.h", 29,
                  typeid(::TCircle), DefineBehavior(ptr, ptr),
                  &::TCircle::Dictionary, isa_proxy, 4,
                  sizeof(::TCircle) );
      instance.SetNew(&new_TCircle);
      instance.SetNewArray(&newArray_TCircle);
      instance.SetDelete(&delete_TCircle);
      instance.SetDeleteArray(&deleteArray_TCircle);
      instance.SetDestructor(&destruct_TCircle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCircle*)
   {
      return GenerateInitInstanceLocal((::TCircle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCircle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TVTrack(void *p);
   static void deleteArray_TVTrack(void *p);
   static void destruct_TVTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVTrack*)
   {
      ::TVTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVTrack", ::TVTrack::Class_Version(), "./TVTrack.h", 36,
                  typeid(::TVTrack), DefineBehavior(ptr, ptr),
                  &::TVTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TVTrack) );
      instance.SetDelete(&delete_TVTrack);
      instance.SetDeleteArray(&deleteArray_TVTrack);
      instance.SetDestructor(&destruct_TVTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVTrack*)
   {
      return GenerateInitInstanceLocal((::TVTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVSurface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TVSurface(void *p);
   static void deleteArray_TVSurface(void *p);
   static void destruct_TVSurface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVSurface*)
   {
      ::TVSurface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVSurface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVSurface", ::TVSurface::Class_Version(), "./TVSurface.h", 31,
                  typeid(::TVSurface), DefineBehavior(ptr, ptr),
                  &::TVSurface::Dictionary, isa_proxy, 4,
                  sizeof(::TVSurface) );
      instance.SetDelete(&delete_TVSurface);
      instance.SetDeleteArray(&deleteArray_TVSurface);
      instance.SetDestructor(&destruct_TVSurface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVSurface*)
   {
      return GenerateInitInstanceLocal((::TVSurface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVSurface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCutCone_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCutCone(void *p = 0);
   static void *newArray_TCutCone(Long_t size, void *p);
   static void delete_TCutCone(void *p);
   static void deleteArray_TCutCone(void *p);
   static void destruct_TCutCone(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCutCone*)
   {
      ::TCutCone *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCutCone >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCutCone", ::TCutCone::Class_Version(), "./TCutCone.h", 34,
                  typeid(::TCutCone), DefineBehavior(ptr, ptr),
                  &::TCutCone::Dictionary, isa_proxy, 4,
                  sizeof(::TCutCone) );
      instance.SetNew(&new_TCutCone);
      instance.SetNewArray(&newArray_TCutCone);
      instance.SetDelete(&delete_TCutCone);
      instance.SetDeleteArray(&deleteArray_TCutCone);
      instance.SetDestructor(&destruct_TCutCone);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCutCone*)
   {
      return GenerateInitInstanceLocal((::TCutCone*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCutCone*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCylinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCylinder(void *p = 0);
   static void *newArray_TCylinder(Long_t size, void *p);
   static void delete_TCylinder(void *p);
   static void deleteArray_TCylinder(void *p);
   static void destruct_TCylinder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCylinder*)
   {
      ::TCylinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCylinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCylinder", ::TCylinder::Class_Version(), "./TCylinder.h", 31,
                  typeid(::TCylinder), DefineBehavior(ptr, ptr),
                  &::TCylinder::Dictionary, isa_proxy, 4,
                  sizeof(::TCylinder) );
      instance.SetNew(&new_TCylinder);
      instance.SetNewArray(&newArray_TCylinder);
      instance.SetDelete(&delete_TCylinder);
      instance.SetDeleteArray(&deleteArray_TCylinder);
      instance.SetDestructor(&destruct_TCylinder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCylinder*)
   {
      return GenerateInitInstanceLocal((::TCylinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCylinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THelicalTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THelicalTrack(void *p = 0);
   static void *newArray_THelicalTrack(Long_t size, void *p);
   static void delete_THelicalTrack(void *p);
   static void deleteArray_THelicalTrack(void *p);
   static void destruct_THelicalTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THelicalTrack*)
   {
      ::THelicalTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THelicalTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THelicalTrack", ::THelicalTrack::Class_Version(), "./THelicalTrack.h", 38,
                  typeid(::THelicalTrack), DefineBehavior(ptr, ptr),
                  &::THelicalTrack::Dictionary, isa_proxy, 4,
                  sizeof(::THelicalTrack) );
      instance.SetNew(&new_THelicalTrack);
      instance.SetNewArray(&newArray_THelicalTrack);
      instance.SetDelete(&delete_THelicalTrack);
      instance.SetDeleteArray(&deleteArray_THelicalTrack);
      instance.SetDestructor(&destruct_THelicalTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THelicalTrack*)
   {
      return GenerateInitInstanceLocal((::THelicalTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THelicalTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void THype_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THype(void *p = 0);
   static void *newArray_THype(Long_t size, void *p);
   static void delete_THype(void *p);
   static void deleteArray_THype(void *p);
   static void destruct_THype(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THype*)
   {
      ::THype *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THype >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THype", ::THype::Class_Version(), "./THype.h", 31,
                  typeid(::THype), DefineBehavior(ptr, ptr),
                  &::THype::Dictionary, isa_proxy, 4,
                  sizeof(::THype) );
      instance.SetNew(&new_THype);
      instance.SetNewArray(&newArray_THype);
      instance.SetDelete(&delete_THype);
      instance.SetDeleteArray(&deleteArray_THype);
      instance.SetDestructor(&destruct_THype);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THype*)
   {
      return GenerateInitInstanceLocal((::THype*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THype*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPlane(void *p = 0);
   static void *newArray_TPlane(Long_t size, void *p);
   static void delete_TPlane(void *p);
   static void deleteArray_TPlane(void *p);
   static void destruct_TPlane(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPlane*)
   {
      ::TPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPlane", ::TPlane::Class_Version(), "./TPlane.h", 31,
                  typeid(::TPlane), DefineBehavior(ptr, ptr),
                  &::TPlane::Dictionary, isa_proxy, 4,
                  sizeof(::TPlane) );
      instance.SetNew(&new_TPlane);
      instance.SetNewArray(&newArray_TPlane);
      instance.SetDelete(&delete_TPlane);
      instance.SetDeleteArray(&deleteArray_TPlane);
      instance.SetDestructor(&destruct_TPlane);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPlane*)
   {
      return GenerateInitInstanceLocal((::TPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TStraightTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TStraightTrack(void *p = 0);
   static void *newArray_TStraightTrack(Long_t size, void *p);
   static void delete_TStraightTrack(void *p);
   static void deleteArray_TStraightTrack(void *p);
   static void destruct_TStraightTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TStraightTrack*)
   {
      ::TStraightTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TStraightTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TStraightTrack", ::TStraightTrack::Class_Version(), "./TStraightTrack.h", 35,
                  typeid(::TStraightTrack), DefineBehavior(ptr, ptr),
                  &::TStraightTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TStraightTrack) );
      instance.SetNew(&new_TStraightTrack);
      instance.SetNewArray(&newArray_TStraightTrack);
      instance.SetDelete(&delete_TStraightTrack);
      instance.SetDeleteArray(&deleteArray_TStraightTrack);
      instance.SetDestructor(&destruct_TStraightTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TStraightTrack*)
   {
      return GenerateInitInstanceLocal((::TStraightTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TStraightTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TVSolid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TVSolid(void *p = 0);
   static void *newArray_TVSolid(Long_t size, void *p);
   static void delete_TVSolid(void *p);
   static void deleteArray_TVSolid(void *p);
   static void destruct_TVSolid(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TVSolid*)
   {
      ::TVSolid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TVSolid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TVSolid", ::TVSolid::Class_Version(), "./TVSolid.h", 25,
                  typeid(::TVSolid), DefineBehavior(ptr, ptr),
                  &::TVSolid::Dictionary, isa_proxy, 4,
                  sizeof(::TVSolid) );
      instance.SetNew(&new_TVSolid);
      instance.SetNewArray(&newArray_TVSolid);
      instance.SetDelete(&delete_TVSolid);
      instance.SetDeleteArray(&deleteArray_TVSolid);
      instance.SetDestructor(&destruct_TVSolid);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TVSolid*)
   {
      return GenerateInitInstanceLocal((::TVSolid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TVSolid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TTube_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTube(void *p = 0);
   static void *newArray_TTube(Long_t size, void *p);
   static void delete_TTube(void *p);
   static void deleteArray_TTube(void *p);
   static void destruct_TTube(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTube*)
   {
      ::TTube *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTube >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTube", ::TTube::Class_Version(), "./TTube.h", 29,
                  typeid(::TTube), DefineBehavior(ptr, ptr),
                  &::TTube::Dictionary, isa_proxy, 4,
                  sizeof(::TTube) );
      instance.SetNew(&new_TTube);
      instance.SetNewArray(&newArray_TTube);
      instance.SetDelete(&delete_TTube);
      instance.SetDeleteArray(&deleteArray_TTube);
      instance.SetDestructor(&destruct_TTube);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTube*)
   {
      return GenerateInitInstanceLocal((::TTube*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTube*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TVCurve::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVCurve::Class_Name()
{
   return "TVCurve";
}

//______________________________________________________________________________
const char *TVCurve::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVCurve*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVCurve::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVCurve*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVCurve::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVCurve*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVCurve::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVCurve*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCircle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCircle::Class_Name()
{
   return "TCircle";
}

//______________________________________________________________________________
const char *TCircle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCircle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCircle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCircle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCircle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCircle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCircle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCircle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVTrack::Class_Name()
{
   return "TVTrack";
}

//______________________________________________________________________________
const char *TVTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVSurface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVSurface::Class_Name()
{
   return "TVSurface";
}

//______________________________________________________________________________
const char *TVSurface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVSurface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVSurface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVSurface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVSurface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVSurface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVSurface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVSurface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCutCone::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCutCone::Class_Name()
{
   return "TCutCone";
}

//______________________________________________________________________________
const char *TCutCone::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCutCone*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCutCone::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCutCone*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCutCone::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCutCone*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCutCone::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCutCone*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCylinder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCylinder::Class_Name()
{
   return "TCylinder";
}

//______________________________________________________________________________
const char *TCylinder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCylinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCylinder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCylinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCylinder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCylinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCylinder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCylinder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THelicalTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THelicalTrack::Class_Name()
{
   return "THelicalTrack";
}

//______________________________________________________________________________
const char *THelicalTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THelicalTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THelicalTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THelicalTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THelicalTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THelicalTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THelicalTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THelicalTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *THype::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THype::Class_Name()
{
   return "THype";
}

//______________________________________________________________________________
const char *THype::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THype*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THype::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THype*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THype::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THype*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THype::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THype*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TPlane::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPlane::Class_Name()
{
   return "TPlane";
}

//______________________________________________________________________________
const char *TPlane::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPlane::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPlane::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPlane::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPlane*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TStraightTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TStraightTrack::Class_Name()
{
   return "TStraightTrack";
}

//______________________________________________________________________________
const char *TStraightTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStraightTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TStraightTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TStraightTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TStraightTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStraightTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TStraightTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TStraightTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TVSolid::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVSolid::Class_Name()
{
   return "TVSolid";
}

//______________________________________________________________________________
const char *TVSolid::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVSolid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVSolid::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TVSolid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVSolid::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVSolid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVSolid::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TVSolid*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TTube::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTube::Class_Name()
{
   return "TTube";
}

//______________________________________________________________________________
const char *TTube::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTube*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTube::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTube*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTube::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTube*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTube::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTube*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TCircle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCircle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCircle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCircle::Class(),this);
   }
}

//______________________________________________________________________________
void TCircle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCircle.
      TClass *R__cl = ::TCircle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      TVCurve::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCircle(void *p) {
      return  p ? new(p) ::TCircle : new ::TCircle;
   }
   static void *newArray_TCircle(Long_t nElements, void *p) {
      return p ? new(p) ::TCircle[nElements] : new ::TCircle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCircle(void *p) {
      delete ((::TCircle*)p);
   }
   static void deleteArray_TCircle(void *p) {
      delete [] ((::TCircle*)p);
   }
   static void destruct_TCircle(void *p) {
      typedef ::TCircle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCircle

//______________________________________________________________________________
void TCutCone::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCutCone.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCutCone::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCutCone::Class(),this);
   }
}

//______________________________________________________________________________
void TCutCone::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCutCone.
      TClass *R__cl = ::TCutCone::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ1", &fZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLen", &fHalfLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanA", &fTanA);
      TVSurface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCutCone(void *p) {
      return  p ? new(p) ::TCutCone : new ::TCutCone;
   }
   static void *newArray_TCutCone(Long_t nElements, void *p) {
      return p ? new(p) ::TCutCone[nElements] : new ::TCutCone[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCutCone(void *p) {
      delete ((::TCutCone*)p);
   }
   static void deleteArray_TCutCone(void *p) {
      delete [] ((::TCutCone*)p);
   }
   static void destruct_TCutCone(void *p) {
      typedef ::TCutCone current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCutCone

//______________________________________________________________________________
void TCylinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCylinder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCylinder::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCylinder::Class(),this);
   }
}

//______________________________________________________________________________
void TCylinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCylinder.
      TClass *R__cl = ::TCylinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR", &fR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLen", &fHalfLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      TVSurface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCylinder(void *p) {
      return  p ? new(p) ::TCylinder : new ::TCylinder;
   }
   static void *newArray_TCylinder(Long_t nElements, void *p) {
      return p ? new(p) ::TCylinder[nElements] : new ::TCylinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCylinder(void *p) {
      delete ((::TCylinder*)p);
   }
   static void deleteArray_TCylinder(void *p) {
      delete [] ((::TCylinder*)p);
   }
   static void destruct_TCylinder(void *p) {
      typedef ::TCylinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCylinder

//______________________________________________________________________________
void TPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPlane::Class(),this);
   }
}

//______________________________________________________________________________
void TPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPlane.
      TClass *R__cl = ::TPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormal", &fNormal);
      R__insp.InspectMember(fNormal, "fNormal.");
      TVSurface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPlane(void *p) {
      return  p ? new(p) ::TPlane : new ::TPlane;
   }
   static void *newArray_TPlane(Long_t nElements, void *p) {
      return p ? new(p) ::TPlane[nElements] : new ::TPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPlane(void *p) {
      delete ((::TPlane*)p);
   }
   static void deleteArray_TPlane(void *p) {
      delete [] ((::TPlane*)p);
   }
   static void destruct_TPlane(void *p) {
      typedef ::TPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPlane

//______________________________________________________________________________
void THype::Streamer(TBuffer &R__b)
{
   // Stream an object of class THype.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THype::Class(),this);
   } else {
      R__b.WriteClassBuffer(THype::Class(),this);
   }
}

//______________________________________________________________________________
void THype::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THype.
      TClass *R__cl = ::THype::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR0", &fR0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLen", &fHalfLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanA", &fTanA);
      TVSurface::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THype(void *p) {
      return  p ? new(p) ::THype : new ::THype;
   }
   static void *newArray_THype(Long_t nElements, void *p) {
      return p ? new(p) ::THype[nElements] : new ::THype[nElements];
   }
   // Wrapper around operator delete
   static void delete_THype(void *p) {
      delete ((::THype*)p);
   }
   static void deleteArray_THype(void *p) {
      delete [] ((::THype*)p);
   }
   static void destruct_THype(void *p) {
      typedef ::THype current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THype

//______________________________________________________________________________
void TTube::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTube.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TTube::Class(),this);
   } else {
      R__b.WriteClassBuffer(TTube::Class(),this);
   }
}

//______________________________________________________________________________
void TTube::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTube.
      TClass *R__cl = ::TTube::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRin", &fRin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRout", &fRout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHalfLen", &fHalfLen);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXc", &fXc);
      R__insp.InspectMember(fXc, "fXc.");
      TVSolid::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTube(void *p) {
      return  p ? new(p) ::TTube : new ::TTube;
   }
   static void *newArray_TTube(Long_t nElements, void *p) {
      return p ? new(p) ::TTube[nElements] : new ::TTube[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTube(void *p) {
      delete ((::TTube*)p);
   }
   static void deleteArray_TTube(void *p) {
      delete [] ((::TTube*)p);
   }
   static void destruct_TTube(void *p) {
      typedef ::TTube current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TTube

//______________________________________________________________________________
void THelicalTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class THelicalTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THelicalTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(THelicalTrack::Class(),this);
   }
}

//______________________________________________________________________________
void THelicalTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THelicalTrack.
      TClass *R__cl = ::THelicalTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      TVTrack::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THelicalTrack(void *p) {
      return  p ? new(p) ::THelicalTrack : new ::THelicalTrack;
   }
   static void *newArray_THelicalTrack(Long_t nElements, void *p) {
      return p ? new(p) ::THelicalTrack[nElements] : new ::THelicalTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_THelicalTrack(void *p) {
      delete ((::THelicalTrack*)p);
   }
   static void deleteArray_THelicalTrack(void *p) {
      delete [] ((::THelicalTrack*)p);
   }
   static void destruct_THelicalTrack(void *p) {
      typedef ::THelicalTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::THelicalTrack

//______________________________________________________________________________
void TStraightTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TStraightTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TStraightTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TStraightTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TStraightTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TStraightTrack.
      TClass *R__cl = ::TStraightTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      TVTrack::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TStraightTrack(void *p) {
      return  p ? new(p) ::TStraightTrack : new ::TStraightTrack;
   }
   static void *newArray_TStraightTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TStraightTrack[nElements] : new ::TStraightTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TStraightTrack(void *p) {
      delete ((::TStraightTrack*)p);
   }
   static void deleteArray_TStraightTrack(void *p) {
      delete [] ((::TStraightTrack*)p);
   }
   static void destruct_TStraightTrack(void *p) {
      typedef ::TStraightTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TStraightTrack

//______________________________________________________________________________
void TVCurve::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVCurve.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVCurve::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVCurve::Class(),this);
   }
}

//______________________________________________________________________________
void TVCurve::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVCurve.
      TClass *R__cl = ::TVCurve::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TVCurve(void *p) {
      return  p ? new(p) ::TVCurve : new ::TVCurve;
   }
   static void *newArray_TVCurve(Long_t nElements, void *p) {
      return p ? new(p) ::TVCurve[nElements] : new ::TVCurve[nElements];
   }
   // Wrapper around operator delete
   static void delete_TVCurve(void *p) {
      delete ((::TVCurve*)p);
   }
   static void deleteArray_TVCurve(void *p) {
      delete [] ((::TVCurve*)p);
   }
   static void destruct_TVCurve(void *p) {
      typedef ::TVCurve current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVCurve

//______________________________________________________________________________
void TVSolid::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVSolid.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVSolid::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVSolid::Class(),this);
   }
}

//______________________________________________________________________________
void TVSolid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVSolid.
      TClass *R__cl = ::TVSolid::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TVSolid(void *p) {
      return  p ? new(p) ::TVSolid : new ::TVSolid;
   }
   static void *newArray_TVSolid(Long_t nElements, void *p) {
      return p ? new(p) ::TVSolid[nElements] : new ::TVSolid[nElements];
   }
   // Wrapper around operator delete
   static void delete_TVSolid(void *p) {
      delete ((::TVSolid*)p);
   }
   static void deleteArray_TVSolid(void *p) {
      delete [] ((::TVSolid*)p);
   }
   static void destruct_TVSolid(void *p) {
      typedef ::TVSolid current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVSolid

//______________________________________________________________________________
void TVSurface::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVSurface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVSurface::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVSurface::Class(),this);
   }
}

//______________________________________________________________________________
void TVSurface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVSurface.
      TClass *R__cl = ::TVSurface::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TVSurface(void *p) {
      delete ((::TVSurface*)p);
   }
   static void deleteArray_TVSurface(void *p) {
      delete [] ((::TVSurface*)p);
   }
   static void destruct_TVSurface(void *p) {
      typedef ::TVSurface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVSurface

//______________________________________________________________________________
void TVTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TVTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TVTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TVTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TVTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TVTrack.
      TClass *R__cl = ::TVTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrho", &fDrho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi0", &fPhi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKappa", &fKappa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDz", &fDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanL", &fTanL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX0", &fX0);
      R__insp.InspectMember(fX0, "fX0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlpha", &fAlpha);
      TVCurve::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TVTrack(void *p) {
      delete ((::TVTrack*)p);
   }
   static void deleteArray_TVTrack(void *p) {
      delete [] ((::TVTrack*)p);
   }
   static void destruct_TVTrack(void *p) {
      typedef ::TVTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TVTrack

/********************************************************
* S4GoemDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableS4GoemDict();

extern "C" void G__set_cpp_environmentS4GoemDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TCircle.h");
  G__add_compiledheader("TCutCone.h");
  G__add_compiledheader("TCylinder.h");
  G__add_compiledheader("THelicalTrack.h");
  G__add_compiledheader("THype.h");
  G__add_compiledheader("TPlane.h");
  G__add_compiledheader("TStraightTrack.h");
  G__add_compiledheader("TTube.h");
  G__add_compiledheader("TVCurve.h");
  G__add_compiledheader("TVSolid.h");
  G__add_compiledheader("TVSurface.h");
  G__add_compiledheader("TVTrack.h");
  G__cpp_reset_tagtableS4GoemDict();
}
#include <new>
extern "C" int G__cpp_dllrevS4GoemDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TVCurve */
static int G__S4GoemDict_161_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVCurve::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVCurve::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVCurve::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVCurve::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVCurve*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVCurve::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVCurve::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVCurve::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_161_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVCurve::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__S4GoemDict_161_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVCurve *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVCurve[n];
     } else {
       p = new((void*) gvp) TVCurve[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVCurve;
     } else {
       p = new((void*) gvp) TVCurve;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_161_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TVCurve* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TVCurve(*(TVCurve*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVCurve G__TTVCurve;
static int G__S4GoemDict_161_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVCurve*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVCurve*) (soff+(sizeof(TVCurve)*i)))->~G__TTVCurve();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVCurve*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVCurve*) (soff))->~G__TTVCurve();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_161_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVCurve* dest = (TVCurve*) G__getstructoffset();
   *dest = *(TVCurve*) libp->para[0].ref;
   const TVCurve& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCircle */
static int G__S4GoemDict_162_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCircle* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCircle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TCircle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCircle((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TCircle((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCircle[n];
       } else {
         p = new((void*) gvp) TCircle[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCircle;
       } else {
         p = new((void*) gvp) TCircle;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCircle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((const TCircle*) G__getstructoffset())->CalcXingPointWith(*(TCircle*) libp->para[0].ref, (TVector2*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const TCircle*) G__getstructoffset())->CalcXingPointWith(*(TCircle*) libp->para[0].ref, (TVector2*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCircle*) G__getstructoffset())->GetRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((const TCircle*) G__getstructoffset())->GetCenter();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TCircle*) G__getstructoffset())->DebugPrint();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCircle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCircle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCircle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCircle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCircle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCircle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCircle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCircle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_162_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCircle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_162_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCircle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCircle(*(TCircle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCircle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCircle G__TTCircle;
static int G__S4GoemDict_162_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCircle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCircle*) (soff+(sizeof(TCircle)*i)))->~G__TTCircle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCircle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCircle*) (soff))->~G__TTCircle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_162_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCircle* dest = (TCircle*) G__getstructoffset();
   *dest = *(TCircle*) libp->para[0].ref;
   const TCircle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVTrack */
static int G__S4GoemDict_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TVTrack*) G__getstructoffset())->MoveTo(*(TVector3*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, (TMatrixD*) G__int(libp->para[2]), (TMatrixD*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((TVTrack*) G__getstructoffset())->MoveTo(*(TVector3*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, (TMatrixD*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TVTrack*) G__getstructoffset())->MoveTo(*(TVector3*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVTrack*) G__getstructoffset())->MoveTo(*(TVector3*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(TMatrixD*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVTrack*) G__getstructoffset())->ScatterBy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TVTrack*) G__getstructoffset())->PutInto(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TVTrack*) G__getstructoffset())->CalcXAt((Double_t) G__double(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD* pobj;
         const TMatrixD xobj = ((const TVTrack*) G__getstructoffset())->CalcDxDa((Double_t) G__double(libp->para[0]));
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD* pobj;
         const TMatrixD xobj = ((const TVTrack*) G__getstructoffset())->CalcDxDphi((Double_t) G__double(libp->para[0]));
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TVTrack*) G__getstructoffset())->CalcDapDa((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(TMatrixD*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetDrho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetPhi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetKappa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetTanLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TVTrack*) G__getstructoffset())->GetPivot();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetRho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetPtoR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetXc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVTrack*) G__getstructoffset())->GetYc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVTrack*) G__getstructoffset())->SetTo(*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVTrack*) G__getstructoffset())->SetMagField((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVTrack*) G__getstructoffset())->IsInB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_232_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVTrack G__TTVTrack;
static int G__S4GoemDict_232_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVTrack*) (soff+(sizeof(TVTrack)*i)))->~G__TTVTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVTrack*) (soff))->~G__TTVTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_232_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVTrack* dest = (TVTrack*) G__getstructoffset();
   *dest = *(TVTrack*) libp->para[0].ref;
   const TVTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVSurface */
static int G__S4GoemDict_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((const TVSurface*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((const TVSurface*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((const TVSurface*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((const TVSurface*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(Double_t*) G__Doubleref(&libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVSurface*) G__getstructoffset())->CalcS(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD* pobj;
         const TMatrixD xobj = ((const TVSurface*) G__getstructoffset())->CalcDSDx(*(TVector3*) libp->para[0].ref);
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVSurface*) G__getstructoffset())->IsOnSurface(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TVSurface*) G__getstructoffset())->IsOutside(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TVSurface*) G__getstructoffset())->GetSortingPolicy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVSurface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSurface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVSurface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVSurface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVSurface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSurface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVSurface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSurface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVSurface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVSurface G__TTVSurface;
static int G__S4GoemDict_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVSurface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVSurface*) (soff+(sizeof(TVSurface)*i)))->~G__TTVSurface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVSurface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVSurface*) (soff))->~G__TTVSurface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_233_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVSurface* dest = (TVSurface*) G__getstructoffset();
   *dest = *(TVSurface*) libp->para[0].ref;
   const TVSurface& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCutCone */
static int G__S4GoemDict_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCutCone* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TCutCone(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TCutCone((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCutCone((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TCutCone((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCutCone[n];
       } else {
         p = new((void*) gvp) TCutCone[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCutCone;
       } else {
         p = new((void*) gvp) TCutCone;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCutCone*) G__getstructoffset())->GetZ1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TCutCone*) G__getstructoffset())->GetXc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCutCone*) G__getstructoffset())->GetTanA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCutCone*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCutCone*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCutCone*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCutCone::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCutCone::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCutCone::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCutCone::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCutCone*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCutCone::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCutCone::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCutCone::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_234_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCutCone::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_234_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCutCone* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCutCone(*(TCutCone*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCutCone G__TTCutCone;
static int G__S4GoemDict_234_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCutCone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCutCone*) (soff+(sizeof(TCutCone)*i)))->~G__TTCutCone();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCutCone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCutCone*) (soff))->~G__TTCutCone();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_234_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCutCone* dest = (TCutCone*) G__getstructoffset();
   *dest = *(TCutCone*) libp->para[0].ref;
   const TCutCone& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCylinder */
static int G__S4GoemDict_235_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCylinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TCylinder(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCylinder((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TCylinder((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCylinder((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TCylinder((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCylinder[n];
       } else {
         p = new((void*) gvp) TCylinder[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TCylinder;
       } else {
         p = new((void*) gvp) TCylinder;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCylinder*) G__getstructoffset())->GetR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TCylinder*) G__getstructoffset())->GetXc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCylinder*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCylinder*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCylinder*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCylinder*) G__getstructoffset())->SetR((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCylinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCylinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCylinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCylinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCylinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCylinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCylinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCylinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_235_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCylinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_235_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCylinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCylinder(*(TCylinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCylinder G__TTCylinder;
static int G__S4GoemDict_235_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCylinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCylinder*) (soff+(sizeof(TCylinder)*i)))->~G__TTCylinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCylinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCylinder*) (soff))->~G__TTCylinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_235_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCylinder* dest = (TCylinder*) G__getstructoffset();
   *dest = *(TCylinder*) libp->para[0].ref;
   const TCylinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THelicalTrack */
static int G__S4GoemDict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THelicalTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THelicalTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) THelicalTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) THelicalTrack((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THelicalTrack[n];
       } else {
         p = new((void*) gvp) THelicalTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THelicalTrack;
       } else {
         p = new((void*) gvp) THelicalTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THelicalTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THelicalTrack(
*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) THelicalTrack(*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THelicalTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref, (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
     } else {
       p = new((void*) gvp) THelicalTrack(
*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, *(TVector3*) libp->para[2].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((THelicalTrack*) G__getstructoffset())->GetXv();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THelicalTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THelicalTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THelicalTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THelicalTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THelicalTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THelicalTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THelicalTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THelicalTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THelicalTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THelicalTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THelicalTrack(*(THelicalTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THelicalTrack G__TTHelicalTrack;
static int G__S4GoemDict_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THelicalTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THelicalTrack*) (soff+(sizeof(THelicalTrack)*i)))->~G__TTHelicalTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THelicalTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THelicalTrack*) (soff))->~G__TTHelicalTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THelicalTrack* dest = (THelicalTrack*) G__getstructoffset();
   *dest = *(THelicalTrack*) libp->para[0].ref;
   const THelicalTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THype */
static int G__S4GoemDict_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THype* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THype(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) THype((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THype((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) THype((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THype[n];
       } else {
         p = new((void*) gvp) THype[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THype;
       } else {
         p = new((void*) gvp) THype;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THype));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THype*) G__getstructoffset())->GetR0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const THype*) G__getstructoffset())->GetXc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THype*) G__getstructoffset())->GetTanA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THype*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THype*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THype*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THype::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THype::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THype::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THype::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THype*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THype::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THype::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THype::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_242_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THype::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_242_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THype* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THype(*(THype*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_THype));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THype G__TTHype;
static int G__S4GoemDict_242_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THype*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THype*) (soff+(sizeof(THype)*i)))->~G__TTHype();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THype*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THype*) (soff))->~G__TTHype();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_242_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THype* dest = (THype*) G__getstructoffset();
   *dest = *(THype*) libp->para[0].ref;
   const THype& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TPlane */
static int G__S4GoemDict_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane[n];
     } else {
       p = new((void*) gvp) TPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPlane;
     } else {
       p = new((void*) gvp) TPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPlane(*(TVector3*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TPlane(*(TVector3*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TPlane(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) TPlane(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TPlane*) G__getstructoffset())->GetXc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TPlane*) G__getstructoffset())->GetNormal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_243_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPlane* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPlane(*(TPlane*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPlane G__TTPlane;
static int G__S4GoemDict_243_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPlane*) (soff+(sizeof(TPlane)*i)))->~G__TTPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPlane*) (soff))->~G__TTPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_243_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPlane* dest = (TPlane*) G__getstructoffset();
   *dest = *(TPlane*) libp->para[0].ref;
   const TPlane& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TStraightTrack */
static int G__S4GoemDict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStraightTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TStraightTrack(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TStraightTrack((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TStraightTrack((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TStraightTrack[n];
       } else {
         p = new((void*) gvp) TStraightTrack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TStraightTrack;
       } else {
         p = new((void*) gvp) TStraightTrack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStraightTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(
*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TStraightTrack(
*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TStraightTrack(*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) TStraightTrack(*(TMatrixD*) libp->para[0].ref, *(TVector3*) libp->para[1].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TStraightTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStraightTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TStraightTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TStraightTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TStraightTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStraightTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStraightTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TStraightTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_244_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TStraightTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_244_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TStraightTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TStraightTrack(*(TStraightTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TStraightTrack G__TTStraightTrack;
static int G__S4GoemDict_244_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TStraightTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TStraightTrack*) (soff+(sizeof(TStraightTrack)*i)))->~G__TTStraightTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TStraightTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TStraightTrack*) (soff))->~G__TTStraightTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_244_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TStraightTrack* dest = (TStraightTrack*) G__getstructoffset();
   *dest = *(TStraightTrack*) libp->para[0].ref;
   const TStraightTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TVSolid */
static int G__S4GoemDict_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TVSolid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSolid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TVSolid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TVSolid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TVSolid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSolid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVSolid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TVSolid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TVSolid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__S4GoemDict_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVSolid *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVSolid[n];
     } else {
       p = new((void*) gvp) TVSolid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TVSolid;
     } else {
       p = new((void*) gvp) TVSolid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TVSolid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TVSolid(*(TVSolid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TVSolid G__TTVSolid;
static int G__S4GoemDict_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TVSolid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TVSolid*) (soff+(sizeof(TVSolid)*i)))->~G__TTVSolid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TVSolid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TVSolid*) (soff))->~G__TTVSolid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TVSolid* dest = (TVSolid*) G__getstructoffset();
   *dest = *(TVSolid*) libp->para[0].ref;
   const TVSolid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TTube */
static int G__S4GoemDict_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTube* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TTube(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TTube((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTube((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TTube((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTube[n];
       } else {
         p = new((void*) gvp) TTube[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TTube;
       } else {
         p = new((void*) gvp) TTube;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TTube));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((const TTube*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(TVector3*) libp->para[2].ref, (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((const TTube*) G__getstructoffset())->CalcXingPointWith(*(TVTrack*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(TVector3*) libp->para[2].ref, (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTube*) G__getstructoffset())->IsOnBarrel(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TTube*) G__getstructoffset())->IsOutside(*(TVector3*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTube*) G__getstructoffset())->GetRin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTube*) G__getstructoffset())->GetRout());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TTube*) G__getstructoffset())->GetXc();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTube*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTube*) G__getstructoffset())->GetZmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TTube*) G__getstructoffset())->GetZmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTube::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTube::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTube::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTube::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTube*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTube::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTube::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTube::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__S4GoemDict_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTube::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__S4GoemDict_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTube* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTube(*(TTube*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__S4GoemDictLN_TTube));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTube G__TTTube;
static int G__S4GoemDict_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTube*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTube*) (soff+(sizeof(TTube)*i)))->~G__TTTube();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTube*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTube*) (soff))->~G__TTTube();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__S4GoemDict_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTube* dest = (TTube*) G__getstructoffset();
   *dest = *(TTube*) libp->para[0].ref;
   const TTube& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TVCurve */

/* TCircle */

/* TVTrack */

/* TVSurface */

/* TCutCone */

/* TCylinder */

/* THelicalTrack */

/* THype */

/* TPlane */

/* TStraightTrack */

/* TVSolid */

/* TTube */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncS4GoemDict {
 public:
  G__Sizep2memfuncS4GoemDict(): p(&G__Sizep2memfuncS4GoemDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncS4GoemDict::*p)();
};

size_t G__get_sizep2memfuncS4GoemDict()
{
  G__Sizep2memfuncS4GoemDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceS4GoemDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve))) {
     TVCurve *G__Lderived;
     G__Lderived=(TVCurve*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TCircle))) {
     TCircle *G__Lderived;
     G__Lderived=(TCircle*)0x1000;
     {
       TVCurve *G__Lpbase=(TVCurve*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCircle),G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCircle),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack))) {
     TVTrack *G__Lderived;
     G__Lderived=(TVTrack*)0x1000;
     {
       TVCurve *G__Lpbase=(TVCurve*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface))) {
     TVSurface *G__Lderived;
     G__Lderived=(TVSurface*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone))) {
     TCutCone *G__Lderived;
     G__Lderived=(TCutCone*)0x1000;
     {
       TVSurface *G__Lpbase=(TVSurface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone),G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder))) {
     TCylinder *G__Lderived;
     G__Lderived=(TCylinder*)0x1000;
     {
       TVSurface *G__Lpbase=(TVSurface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder),G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack))) {
     THelicalTrack *G__Lderived;
     G__Lderived=(THelicalTrack*)0x1000;
     {
       TVTrack *G__Lpbase=(TVTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVCurve *G__Lpbase=(TVCurve*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_THype))) {
     THype *G__Lderived;
     G__Lderived=(THype*)0x1000;
     {
       TVSurface *G__Lpbase=(TVSurface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THype),G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THype),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TPlane))) {
     TPlane *G__Lderived;
     G__Lderived=(TPlane*)0x1000;
     {
       TVSurface *G__Lpbase=(TVSurface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TPlane),G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TPlane),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack))) {
     TStraightTrack *G__Lderived;
     G__Lderived=(TStraightTrack*)0x1000;
     {
       TVTrack *G__Lpbase=(TVTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVCurve *G__Lpbase=(TVCurve*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid))) {
     TVSolid *G__Lderived;
     G__Lderived=(TVSolid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__S4GoemDictLN_TTube))) {
     TTube *G__Lderived;
     G__Lderived=(TTube*)0x1000;
     {
       TVSolid *G__Lpbase=(TVSolid*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TTube),G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TTube),G__get_linked_tagnum(&G__S4GoemDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableS4GoemDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__S4GoemDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__S4GoemDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__S4GoemDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__S4GoemDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__S4GoemDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TVCurve */
static void G__setup_memvarTVCurve(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve));
   { TVCurve *p; p=(TVCurve*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCircle */
static void G__setup_memvarTCircle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCircle));
   { TCircle *p; p=(TCircle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR=",0,"radius");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector2),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVTrack */
static void G__setup_memvarTVTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack));
   { TVTrack *p; p=(TVTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDrho=",0,"drho");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi0=",0,"phi0");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fKappa=",0,"kappa");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDz=",0,"dz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTanL=",0,"tanl");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,2,"fX0=",0,"pivot");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAlpha=",0,"alpha");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kLightVelocity=",0,"! light velocity [cm/sec]");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kGiga=",0,"! Giga = 10^{9}");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,2,"kInfinity=",0,"! infinity");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVSurface */
static void G__setup_memvarTVSurface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface));
   { TVSurface *p; p=(TVSurface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCutCone */
static void G__setup_memvarTCutCone(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone));
   { TCutCone *p; p=(TCutCone*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ1=",0,"z position of the front face");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLen=",0,"half length (cone length from the apex)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanA=",0,"tan(half cone angle)");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kTol=",0,"tolerance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCylinder */
static void G__setup_memvarTCylinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder));
   { TCylinder *p; p=(TCylinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR=",0,"radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLen=",0,"half length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THelicalTrack */
static void G__setup_memvarTHelicalTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   { THelicalTrack *p; p=(THelicalTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THype */
static void G__setup_memvarTHype(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THype));
   { THype *p; p=(THype*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR0=",0,"radius at z = 0.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLen=",0,"half length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanA=",0,"tan(stereo angle)");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kTol=",0,"tolerance");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TPlane */
static void G__setup_memvarTPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   { TPlane *p; p=(TPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fNormal=",0,"normal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TStraightTrack */
static void G__setup_memvarTStraightTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack));
   { TStraightTrack *p; p=(TStraightTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TVSolid */
static void G__setup_memvarTVSolid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid));
   { TVSolid *p; p=(TVSolid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TTube */
static void G__setup_memvarTTube(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TTube));
   { TTube *p; p=(TTube*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRin=",0,"inner radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRout=",0,"outer radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHalfLen=",0,"half length");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TVector3),-1,-1,4,"fXc=",0,"center");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__S4GoemDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarS4GoemDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTVCurve(void) {
   /* TVCurve */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve));
   G__memfunc_setup("Class",502,G__S4GoemDict_161_0_1, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVCurve::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_161_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVCurve::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_161_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVCurve::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_161_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVCurve::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_161_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_161_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVCurve::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_161_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVCurve::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_161_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVCurve::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_161_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVCurve::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TVCurve", 687, G__S4GoemDict_161_0_13, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TVCurve", 687, G__S4GoemDict_161_0_14, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve), -1, 0, 1, 1, 1, 0, "u 'TVCurve' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TVCurve", 813, G__S4GoemDict_161_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_161_0_16, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TVCurve), -1, 1, 1, 1, 1, 0, "u 'TVCurve' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCircle(void) {
   /* TCircle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCircle));
   G__memfunc_setup("TCircle",678,G__S4GoemDict_162_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TCircle), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '1.' r d - 'Double_t' 0 '0.' xc "
"d - 'Double_t' 0 '0.' yc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcXingPointWith",1711,G__S4GoemDict_162_0_2, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'TCircle' - 11 - c U 'TVector2' - 0 - xx "
"d - 'Double_t' 0 '1.e-8' eps", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRadius",904,G__S4GoemDict_162_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCenter",897,G__S4GoemDict_162_0_4, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector2), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DebugPrint",1012,G__S4GoemDict_162_0_5, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_162_0_6, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCircle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_162_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCircle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_162_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCircle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_162_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCircle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_162_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_162_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCircle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_162_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCircle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_162_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCircle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_162_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCircle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCircle", 678, G__S4GoemDict_162_0_18, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TCircle), -1, 0, 1, 1, 1, 0, "u 'TCircle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCircle", 804, G__S4GoemDict_162_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_162_0_20, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TCircle), -1, 1, 1, 1, 1, 0, "u 'TCircle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVTrack(void) {
   /* TVTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack));
   G__memfunc_setup("MoveTo",602,G__S4GoemDict_232_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - x0to d - 'Double_t' 1 - fid "
"U 'TMatrixT<double>' 'TMatrixD' 0 '0' F U 'TMatrixT<double>' 'TMatrixD' 0 '0' C", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("MoveTo",602,G__S4GoemDict_232_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - x0to d - 'Double_t' 1 - fid "
"u 'TMatrixT<double>' 'TMatrixD' 1 - C", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ScatterBy",913,G__S4GoemDict_232_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - dphi d - 'Double_t' 0 - dtnl", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PutInto",723,G__S4GoemDict_232_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TMatrixT<double>' 'TMatrixD' 1 - sv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcXAt",640,G__S4GoemDict_232_0_7, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CalcDxDa",724,G__S4GoemDict_232_0_8, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CalcDxDphi",948,G__S4GoemDict_232_0_9, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CalcDapDa",813,G__S4GoemDict_232_0_10, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - fid d - 'Double_t' 0 - dr "
"d - 'Double_t' 0 - drp u 'TMatrixT<double>' 'TMatrixD' 1 - F", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetDrho",685,G__S4GoemDict_232_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhi0",625,G__S4GoemDict_232_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKappa",781,G__S4GoemDict_232_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDz",478,G__S4GoemDict_232_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTanLambda",1156,G__S4GoemDict_232_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPivot",818,G__S4GoemDict_232_0_16, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRho",585,G__S4GoemDict_232_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPtoR",677,G__S4GoemDict_232_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_232_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetYc",476,G__S4GoemDict_232_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTo",495,G__S4GoemDict_232_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - sv u 'TVector3' - 11 - x0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMagField",1061,G__S4GoemDict_232_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsInB",437,G__S4GoemDict_232_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_232_0_24, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_232_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_232_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_232_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_232_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_232_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_232_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_232_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_232_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVTrack", 797, G__S4GoemDict_232_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_232_0_37, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TVTrack), -1, 1, 1, 1, 1, 0, "u 'TVTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVSurface(void) {
   /* TVSurface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface));
   G__memfunc_setup("CalcXingPointWith",1711,G__S4GoemDict_233_0_1, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"u 'TVTrack' - 11 - hel u 'TVector3' - 1 - xx "
"d - 'Double_t' 1 - phi d - 'Double_t' 0 '1.e-8' eps", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcXingPointWith",1711,G__S4GoemDict_233_0_2, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"u 'TVTrack' - 11 - hel u 'TVector3' - 1 - xx "
"d - 'Double_t' 1 - phi i - 'Int_t' 0 - mode "
"d - 'Double_t' 0 '1.e-8' eps", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcS",454,G__S4GoemDict_233_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("CalcDSDx",710,G__S4GoemDict_233_0_4, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsOnSurface",1090,G__S4GoemDict_233_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("IsOutside",921,G__S4GoemDict_233_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSortingPolicy",1654,G__S4GoemDict_233_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_233_0_10, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVSurface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_233_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSurface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_233_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVSurface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_233_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVSurface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_233_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_233_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSurface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_233_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVSurface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_233_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSurface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_233_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVSurface::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TVSurface", 1009, G__S4GoemDict_233_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_233_0_23, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TVSurface), -1, 1, 1, 1, 1, 0, "u 'TVSurface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCutCone(void) {
   /* TCutCone */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone));
   G__memfunc_setup("TCutCone",773,G__S4GoemDict_234_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 '0.5' z1 d - 'Double_t' 0 '1.0' hlen "
"d - 'Double_t' 0 '0.1' tana d - 'Double_t' 0 '0.' xc "
"d - 'Double_t' 0 '0' yc d - 'Double_t' 0 '0.' zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcS",454,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDSDx",710,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOnSurface",1090,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSortingPolicy",1654,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZ1",427,G__S4GoemDict_234_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_234_0_8, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTanA",644,G__S4GoemDict_234_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__S4GoemDict_234_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmin",702,G__S4GoemDict_234_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmax",704,G__S4GoemDict_234_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_234_0_13, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCutCone::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_234_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCutCone::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_234_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCutCone::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_234_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCutCone::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_234_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_234_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCutCone::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_234_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCutCone::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_234_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCutCone::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_234_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCutCone::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCutCone", 773, G__S4GoemDict_234_0_25, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone), -1, 0, 1, 1, 1, 0, "u 'TCutCone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCutCone", 899, G__S4GoemDict_234_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_234_0_27, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TCutCone), -1, 1, 1, 1, 1, 0, "u 'TCutCone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCylinder(void) {
   /* TCylinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder));
   G__memfunc_setup("TCylinder",910,G__S4GoemDict_235_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 '1.' r d - 'Double_t' 0 '1.' hlen "
"d - 'Double_t' 0 '0.' xc d - 'Double_t' 0 '0' yc "
"d - 'Double_t' 0 '0.' zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcXingPointWith",1711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"u 'TVTrack' - 11 - hel u 'TVector3' - 1 - xx "
"d - 'Double_t' 1 - phi i - 'Int_t' 0 - mode "
"d - 'Double_t' 0 '1.e-8' eps", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcS",454,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDSDx",710,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOnSurface",1090,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSortingPolicy",1654,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetR",370,G__S4GoemDict_235_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_235_0_9, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__S4GoemDict_235_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmin",702,G__S4GoemDict_235_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmax",704,G__S4GoemDict_235_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetR",382,G__S4GoemDict_235_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__S4GoemDict_235_0_14, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCylinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_235_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCylinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_235_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCylinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_235_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCylinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_235_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_235_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCylinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_235_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCylinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_235_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCylinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_235_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCylinder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCylinder", 910, G__S4GoemDict_235_0_26, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder), -1, 0, 1, 1, 1, 0, "u 'TCylinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCylinder", 1036, G__S4GoemDict_235_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_235_0_28, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TCylinder), -1, 1, 1, 1, 1, 0, "u 'TCylinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHelicalTrack(void) {
   /* THelicalTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack));
   G__memfunc_setup("THelicalTrack",1275,G__S4GoemDict_241_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 '0.' dr d - 'Double_t' 0 '0.' phi0 "
"d - 'Double_t' 0 '1.e-5' kappa d - 'Double_t' 0 '0.' dz "
"d - 'Double_t' 0 '0.' tanl d - 'Double_t' 0 '0.' x0 "
"d - 'Double_t' 0 '0.' y0 d - 'Double_t' 0 '0.' z0 "
"d - 'Double_t' 0 '30.' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THelicalTrack",1275,G__S4GoemDict_241_0_2, 105, G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack), -1, 0, 3, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - a u 'TVector3' - 11 - x0 "
"d - 'Double_t' 0 '30.' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THelicalTrack",1275,G__S4GoemDict_241_0_3, 105, G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack), -1, 0, 5, 1, 1, 0, 
"u 'TVector3' - 11 - x1 u 'TVector3' - 11 - x2 "
"u 'TVector3' - 11 - x3 d - 'Double_t' 0 '30.' b "
"g - 'Bool_t' 0 'kIterForward' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveTo",602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - x0to d - 'Double_t' 1 - fid "
"U 'TMatrixT<double>' 'TMatrixD' 0 '0' F U 'TMatrixT<double>' 'TMatrixD' 0 '0' C", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcXAt",640,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDxDa",724,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDxDphi",948,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDapDa",813,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - fid d - 'Double_t' 0 - dr "
"d - 'Double_t' 0 - drp u 'TMatrixT<double>' 'TMatrixD' 1 - F", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXv",494,G__S4GoemDict_241_0_9, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcStartHelix",1403,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"u 'TVector3' - 11 - x1 u 'TVector3' - 11 - x2 "
"u 'TVector3' - 11 - x3 g - 'Bool_t' 0 'kIterForward' dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__S4GoemDict_241_0_11, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THelicalTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_241_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THelicalTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_241_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THelicalTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_241_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THelicalTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_241_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_241_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THelicalTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_241_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THelicalTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_241_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THelicalTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_241_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THelicalTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THelicalTrack", 1275, G__S4GoemDict_241_0_23, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack), -1, 0, 1, 1, 1, 0, "u 'THelicalTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THelicalTrack", 1401, G__S4GoemDict_241_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_241_0_25, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_THelicalTrack), -1, 1, 1, 1, 1, 0, "u 'THelicalTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHype(void) {
   /* THype */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_THype));
   G__memfunc_setup("THype",490,G__S4GoemDict_242_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_THype), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 '1.' r d - 'Double_t' 0 '1.' hlen "
"d - 'Double_t' 0 '0.' tana d - 'Double_t' 0 '0.' xc "
"d - 'Double_t' 0 '0' yc d - 'Double_t' 0 '0.' zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcS",454,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDSDx",710,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOnSurface",1090,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSortingPolicy",1654,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetR0",418,G__S4GoemDict_242_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_242_0_8, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTanA",644,G__S4GoemDict_242_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__S4GoemDict_242_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmin",702,G__S4GoemDict_242_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmax",704,G__S4GoemDict_242_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_242_0_13, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THype::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_242_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THype::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_242_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THype::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_242_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THype::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_242_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_242_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THype::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_242_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THype::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_242_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THype::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_242_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THype::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THype", 490, G__S4GoemDict_242_0_25, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_THype), -1, 0, 1, 1, 1, 0, "u 'THype' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THype", 616, G__S4GoemDict_242_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_242_0_27, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_THype), -1, 1, 1, 1, 1, 0, "u 'THype' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTPlane(void) {
   /* TPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TPlane));
   G__memfunc_setup("TPlane",580,G__S4GoemDict_243_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPlane",580,G__S4GoemDict_243_0_2, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TPlane), -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - xc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TPlane",580,G__S4GoemDict_243_0_3, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TPlane), -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - xc u 'TVector3' - 11 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcS",454,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDSDx",710,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_243_0_6, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNormal",905,G__S4GoemDict_243_0_7, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOnSurface",1090,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSortingPolicy",1654,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_243_0_11, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_243_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_243_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_243_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_243_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_243_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_243_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_243_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_243_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPlane::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPlane", 580, G__S4GoemDict_243_0_23, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TPlane), -1, 0, 1, 1, 1, 0, "u 'TPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPlane", 706, G__S4GoemDict_243_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_243_0_25, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TPlane), -1, 1, 1, 1, 1, 0, "u 'TPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTStraightTrack(void) {
   /* TStraightTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack));
   G__memfunc_setup("TStraightTrack",1423,G__S4GoemDict_244_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack), -1, 0, 9, 1, 1, 0, 
"d - 'Double_t' 0 '0.' dr d - 'Double_t' 0 '0.' phi0 "
"d - 'Double_t' 0 '1.e-5' kappa d - 'Double_t' 0 '0.' dz "
"d - 'Double_t' 0 '0.' tanl d - 'Double_t' 0 '0.' x0 "
"d - 'Double_t' 0 '0.' y0 d - 'Double_t' 0 '0.' z0 "
"d - 'Double_t' 0 '0.' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TStraightTrack",1423,G__S4GoemDict_244_0_2, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack), -1, 0, 3, 1, 1, 0, 
"u 'TMatrixT<double>' 'TMatrixD' 11 - a u 'TVector3' - 11 - x0 "
"d - 'Double_t' 0 '0.' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MoveTo",602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - x0to d - 'Double_t' 1 - t "
"U 'TMatrixT<double>' 'TMatrixD' 0 '0' F U 'TMatrixT<double>' 'TMatrixD' 0 '0' C", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcXAt",640,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDxDa",724,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDxDphi",948,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__S4GoemDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDapDa",813,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"d - 'Double_t' 0 - fid d - 'Double_t' 0 - dr "
"d - 'Double_t' 0 - drp u 'TMatrixT<double>' 'TMatrixD' 1 - F", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_244_0_8, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TStraightTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_244_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStraightTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_244_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TStraightTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_244_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TStraightTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_244_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_244_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStraightTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_244_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStraightTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_244_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TStraightTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_244_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TStraightTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TStraightTrack", 1423, G__S4GoemDict_244_0_20, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack), -1, 0, 1, 1, 1, 0, "u 'TStraightTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TStraightTrack", 1549, G__S4GoemDict_244_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_244_0_22, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TStraightTrack), -1, 1, 1, 1, 1, 0, "u 'TStraightTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTVSolid(void) {
   /* TVSolid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid));
   G__memfunc_setup("Class",502,G__S4GoemDict_245_0_1, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TVSolid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_245_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSolid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_245_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TVSolid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_245_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TVSolid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_245_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_245_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSolid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_245_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVSolid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_245_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TVSolid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_245_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TVSolid::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("TVSolid", 677, G__S4GoemDict_245_0_13, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TVSolid", 677, G__S4GoemDict_245_0_14, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid), -1, 0, 1, 1, 1, 0, "u 'TVSolid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TVSolid", 803, G__S4GoemDict_245_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_245_0_16, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TVSolid), -1, 1, 1, 1, 1, 0, "u 'TVSolid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTTube(void) {
   /* TTube */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__S4GoemDictLN_TTube));
   G__memfunc_setup("TTube",484,G__S4GoemDict_246_0_1, 105, G__get_linked_tagnum(&G__S4GoemDictLN_TTube), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 '0.' rin d - 'Double_t' 0 '1.' rout "
"d - 'Double_t' 0 '1.' hlen d - 'Double_t' 0 '0.' xc "
"d - 'Double_t' 0 '0' yc d - 'Double_t' 0 '0.' zc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcXingPointWith",1711,G__S4GoemDict_246_0_2, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 8, 
"u 'TVTrack' - 11 - hel d - 'Double_t' 1 - phi "
"u 'TVector3' - 1 - xx i - 'Int_t' 0 - mode "
"d - 'Double_t' 0 '1.e-8' eps", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOnBarrel",977,G__S4GoemDict_246_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsOutside",921,G__S4GoemDict_246_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xx", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRin",585,G__S4GoemDict_246_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRout",714,G__S4GoemDict_246_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetXc",475,G__S4GoemDict_246_0_7, 117, G__get_linked_tagnum(&G__S4GoemDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__S4GoemDict_246_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmin",702,G__S4GoemDict_246_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetZmax",704,G__S4GoemDict_246_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__S4GoemDict_246_0_11, 85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTube::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__S4GoemDict_246_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTube::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__S4GoemDict_246_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTube::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__S4GoemDict_246_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTube::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__S4GoemDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__S4GoemDict_246_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__S4GoemDict_246_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTube::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__S4GoemDict_246_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTube::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__S4GoemDict_246_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTube::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__S4GoemDict_246_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTube::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTube", 484, G__S4GoemDict_246_0_23, (int) ('i'), G__get_linked_tagnum(&G__S4GoemDictLN_TTube), -1, 0, 1, 1, 1, 0, "u 'TTube' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTube", 610, G__S4GoemDict_246_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__S4GoemDict_246_0_25, (int) ('u'), G__get_linked_tagnum(&G__S4GoemDictLN_TTube), -1, 1, 1, 1, 1, 0, "u 'TTube' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncS4GoemDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalS4GoemDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcS4GoemDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__S4GoemDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVCurve = { "TVCurve" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TCircle = { "TCircle" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVTrack = { "TVTrack" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVSurface = { "TVSurface" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TCutCone = { "TCutCone" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TCylinder = { "TCylinder" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_THelicalTrack = { "THelicalTrack" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_THype = { "THype" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TPlane = { "TPlane" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TStraightTrack = { "TStraightTrack" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TVSolid = { "TVSolid" , 99 , -1 };
G__linked_taginfo G__S4GoemDictLN_TTube = { "TTube" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableS4GoemDict() {
  G__S4GoemDictLN_TClass.tagnum = -1 ;
  G__S4GoemDictLN_TBuffer.tagnum = -1 ;
  G__S4GoemDictLN_TMemberInspector.tagnum = -1 ;
  G__S4GoemDictLN_TObject.tagnum = -1 ;
  G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__S4GoemDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__S4GoemDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__S4GoemDictLN_TVector2.tagnum = -1 ;
  G__S4GoemDictLN_TVCurve.tagnum = -1 ;
  G__S4GoemDictLN_TCircle.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__S4GoemDictLN_TVector3.tagnum = -1 ;
  G__S4GoemDictLN_TVTrack.tagnum = -1 ;
  G__S4GoemDictLN_TVSurface.tagnum = -1 ;
  G__S4GoemDictLN_TCutCone.tagnum = -1 ;
  G__S4GoemDictLN_TCylinder.tagnum = -1 ;
  G__S4GoemDictLN_THelicalTrack.tagnum = -1 ;
  G__S4GoemDictLN_THype.tagnum = -1 ;
  G__S4GoemDictLN_TPlane.tagnum = -1 ;
  G__S4GoemDictLN_TStraightTrack.tagnum = -1 ;
  G__S4GoemDictLN_TVSolid.tagnum = -1 ;
  G__S4GoemDictLN_TTube.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableS4GoemDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVector2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVCurve),sizeof(TVCurve),-1,290816,"Base class for any curve",G__setup_memvarTVCurve,G__setup_memfuncTVCurve);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TCircle),sizeof(TCircle),-1,292096,"circle class",G__setup_memvarTCircle,G__setup_memfuncTCircle);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVTrack),sizeof(TVTrack),-1,324869,"Base class for any track",G__setup_memvarTVTrack,G__setup_memfuncTVTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVSurface),sizeof(TVSurface),-1,290821,"Base class for any surface",G__setup_memvarTVSurface,G__setup_memfuncTVSurface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TCutCone),sizeof(TCutCone),-1,292096,"hype class",G__setup_memvarTCutCone,G__setup_memfuncTCutCone);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TCylinder),sizeof(TCylinder),-1,292096,"cylinder class",G__setup_memvarTCylinder,G__setup_memfuncTCylinder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_THelicalTrack),sizeof(THelicalTrack),-1,324864,"circle class",G__setup_memvarTHelicalTrack,G__setup_memfuncTHelicalTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_THype),sizeof(THype),-1,292096,"hype class",G__setup_memvarTHype,G__setup_memfuncTHype);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TPlane),sizeof(TPlane),-1,324864,"plane class",G__setup_memvarTPlane,G__setup_memfuncTPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TStraightTrack),sizeof(TStraightTrack),-1,324864,"circle class",G__setup_memvarTStraightTrack,G__setup_memfuncTStraightTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TVSolid),sizeof(TVSolid),-1,290816,"Base class for any solid",G__setup_memvarTVSolid,G__setup_memfuncTVSolid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__S4GoemDictLN_TTube),sizeof(TTube),-1,292096,"TTube class",G__setup_memvarTTube,G__setup_memfuncTTube);
}
extern "C" void G__cpp_setupS4GoemDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupS4GoemDict()");
  G__set_cpp_environmentS4GoemDict();
  G__cpp_setup_tagtableS4GoemDict();

  G__cpp_setup_inheritanceS4GoemDict();

  G__cpp_setup_typetableS4GoemDict();

  G__cpp_setup_memvarS4GoemDict();

  G__cpp_setup_memfuncS4GoemDict();
  G__cpp_setup_globalS4GoemDict();
  G__cpp_setup_funcS4GoemDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncS4GoemDict();
  return;
}
class G__cpp_setup_initS4GoemDict {
  public:
    G__cpp_setup_initS4GoemDict() { G__add_setup_func("S4GoemDict",(G__incsetup)(&G__cpp_setupS4GoemDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initS4GoemDict() { G__remove_setup_func("S4GoemDict"); }
};
G__cpp_setup_initS4GoemDict G__cpp_setup_initializerS4GoemDict;

